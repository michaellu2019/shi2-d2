
import matplotlib.pyplot as plt

def f1():
  k = 0
  last_zmp_x = 0.0
  last_zmp_y = 0.0
  zmp_x = 0.0
  zmp_y = 0.0

  ZMP_MPC_NUM_TIMESTEPS = 300  # Example constant
  ZMP_MPC_TIMESTEP_PERIOD_MS = 5.0  # Example constant
  ZMP_STEP_LENGTH_M = 0.02  # Example constant
  ZMP_STEP_WIDTH_M = 0.05  # Example constant
  step_period_ms = 500  # Example constant
  single_support_duration_ms = step_period_ms / 2 - 30
  double_support_duration_ms = step_period_ms / 2 - single_support_duration_ms

  body_state_x = 0.0  # Replace with actual body state x
  body_state_y = 0.0  # Replace with actual body state y

  zmp_mpc_x_data = {"zmp_refs": [0.0] * ZMP_MPC_NUM_TIMESTEPS}
  zmp_mpc_y_data = {"zmp_refs": [0.0] * ZMP_MPC_NUM_TIMESTEPS}

  for i in range(k, k + ZMP_MPC_NUM_TIMESTEPS):
      t_ms = i * ZMP_MPC_TIMESTEP_PERIOD_MS
      step_num = int(t_ms / (0.5 * step_period_ms))
      double_support = t_ms % (0.5 * step_period_ms) < double_support_duration_ms

      new_zmp_x = body_state_x + step_num * ZMP_STEP_LENGTH_M
      new_zmp_y = body_state_y + (2 * (step_num % 2) - 1) * ZMP_STEP_WIDTH_M

      if t_ms % (0.5 * step_period_ms) == 0:
          last_zmp_x = zmp_x
          zmp_x = new_zmp_x
          last_zmp_y = zmp_y
          zmp_y = new_zmp_y

      if double_support:
          zmp_mpc_x_data["zmp_refs"][i] = last_zmp_x + ((zmp_x - last_zmp_x) / double_support_duration_ms) * (t_ms % (0.5 * step_period_ms))
          zmp_mpc_y_data["zmp_refs"][i] = last_zmp_y + ((zmp_y - last_zmp_y) / double_support_duration_ms) * (t_ms % (0.5 * step_period_ms))
      else:
          zmp_mpc_x_data["zmp_refs"][i] = zmp_x
          zmp_mpc_y_data["zmp_refs"][i] = zmp_y

  # Extract the ZMP references
  zmp_x_refs = zmp_mpc_x_data["zmp_refs"]
  zmp_y_refs = zmp_mpc_y_data["zmp_refs"]
  time = [i * ZMP_MPC_TIMESTEP_PERIOD_MS / 1000.0 for i in range(ZMP_MPC_NUM_TIMESTEPS)]  # Time in seconds

  # Create the plots
  plt.figure(figsize=(12, 8))

  # Subplot 1: ZMP X vs Time
  plt.subplot(2, 1, 1)
  plt.plot(time, zmp_x_refs, label="ZMP X Trajectory", color="blue", linestyle="-")
  plt.xlabel("Time (seconds)")
  plt.ylabel("ZMP X (meters)")
  plt.title("ZMP X vs Time")
  plt.legend()
  plt.grid()

  # Subplot 2: ZMP Y vs Time
  plt.subplot(2, 1, 2)
  plt.plot(time, zmp_y_refs, label="ZMP Y Trajectory", color="green", linestyle="-")
  plt.xlabel("Time (seconds)")
  plt.ylabel("ZMP Y (meters)")
  plt.title("ZMP Y vs Time")
  plt.legend()
  plt.grid()

  plt.figure(figsize=(8, 6))
  plt.plot(zmp_x_refs, zmp_y_refs, label="ZMP Trajectory", marker="o", markersize=2, linestyle="-")

  # Adjust layout and show the plot
  plt.tight_layout()
  plt.show()

def f2():
  # Data
  zmp_data = [
      (0, 0, 0), (5, 0, -0.00625), (10, 0, -0.0125), (15, 0, -0.01875), (20, 0, -0.025), (25, 0, -0.03125), (30, 0, -0.0375), (35, 0, -0.04375), (40, 0, -0.05), (45, 0, -0.05), (50, 0, -0.05), (55, 0, -0.05), (60, 0, -0.05), (65, 0, -0.05), (70, 0, -0.05), (75, 0, -0.05), (80, 0, -0.05), (85, 0, -0.05), (90, 0, -0.05), (95, 0, -0.05), (100, 0, -0.05), (105, 0, -0.05), (110, 0, -0.05), (115, 0, -0.05), (120, 0, -0.05), (125, 0, -0.05), (130, 0, -0.05), (135, 0, -0.05), (140, 0, -0.05), (145, 0, -0.05), (150, 0, -0.05), (155, 0, -0.05), (160, 0, -0.05), (165, 0, -0.05), (170, 0, -0.05), (175, 0, -0.05), (180, 0, -0.05), (185, 0, -0.05), (190, 0, -0.05), (195, 0, -0.05), (200, 0, -0.05), (205, 0.0025, -0.0375), (210, 0.005, -0.025), (215, 0.0075, -0.0125), (220, 0.01, 0), (225, 0.0125, 0.0125), (230, 0.015, 0.025), (235, 0.0175, 0.0375), (240, 0.02, 0.05), (245, 0.02, 0.05), (250, 0.02, 0.05), (255, 0.02, 0.05), (260, 0.02, 0.05), (265, 0.02, 0.05), (270, 0.02, 0.05), (275, 0.02, 0.05), (280, 0.02, 0.05), (285, 0.02, 0.05), (290, 0.02, 0.05), (295, 0.02, 0.05), (300, 0.02, 0.05), (305, 0.02, 0.05), (310, 0.02, 0.05), (315, 0.02, 0.05), (320, 0.02, 0.05), (325, 0.02, 0.05), (330, 0.02, 0.05), (335, 0.02, 0.05), (340, 0.02, 0.05), (345, 0.02, 0.05), (350, 0.02, 0.05), (355, 0.02, 0.05), (360, 0.02, 0.05), (365, 0.02, 0.05), (370, 0.02, 0.05), (375, 0.02, 0.05), (380, 0.02, 0.05), (385, 0.02, 0.05), (390, 0.02, 0.05), (395, 0.02, 0.05), (400, 0.02, 0.05), (405, 0.0225, 0.0375), (410, 0.025, 0.025), (415, 0.0275, 0.0125), (420, 0.03, 0), (425, 0.0325, -0.0125), (430, 0.035, -0.025), (435, 0.0375, -0.0375), (440, 0.04, -0.05), (445, 0.04, -0.05), (450, 0.04, -0.05), (455, 0.04, -0.05), (460, 0.04, -0.05), (465, 0.04, -0.05), (470, 0.04, -0.05), (475, 0.04, -0.05), (480, 0.04, -0.05), (485, 0.04, -0.05), (490, 0.04, -0.05), (495, 0.04, -0.05), (500, 0.04, -0.05), (505, 0.04, -0.05), (510, 0.04, -0.05), (515, 0.04, -0.05), (520, 0.04, -0.05), (525, 0.04, -0.05), (530, 0.04, -0.05), (535, 0.04, -0.05), (540, 0.04, -0.05), (545, 0.04, -0.05), (550, 0.04, -0.05), (555, 0.04, -0.05), (560, 0.04, -0.05), (565, 0.04, -0.05), (570, 0.04, -0.05), (575, 0.04, -0.05), (580, 0.04, -0.05), (585, 0.04, -0.05), (590, 0.04, -0.05), (595, 0.04, -0.05), (600, 0.04, -0.05), (605, 0.0425, -0.0375), (610, 0.045, -0.025), (615, 0.0475, -0.0125), (620, 0.05, 0), (625, 0.0525, 0.0125), (630, 0.055, 0.025), (635, 0.0575, 0.0375), (640, 0.06, 0.05), (645, 0.06, 0.05), (650, 0.06, 0.05), (655, 0.06, 0.05), (660, 0.06, 0.05), (665, 0.06, 0.05), (670, 0.06, 0.05), (675, 0.06, 0.05), (680, 0.06, 0.05), (685, 0.06, 0.05), (690, 0.06, 0.05), (695, 0.06, 0.05), (700, 0.06, 0.05), (705, 0.06, 0.05), (710, 0.06, 0.05), (715, 0.06, 0.05), (720, 0.06, 0.05), (725, 0.06, 0.05), (730, 0.06, 0.05), (735, 0.06, 0.05), (740, 0.06, 0.05), (745, 0.06, 0.05), (750, 0.06, 0.05), (755, 0.06, 0.05), (760, 0.06, 0.05), (765, 0.06, 0.05), (770, 0.06, 0.05), (775, 0.06, 0.05), (780, 0.06, 0.05), (785, 0.06, 0.05), (790, 0.06, 0.05), (795, 0.06, 0.05), (800, 0.06, 0.05), (805, 0.0625, 0.0375), (810, 0.065, 0.025), (815, 0.0675, 0.0125), (820, 0.07, 0), (825, 0.0725, -0.0125), (830, 0.075, -0.025), (835, 0.0775, -0.0375), (840, 0.08, -0.05), (845, 0.08, -0.05), (850, 0.08, -0.05), (855, 0.08, -0.05), (860, 0.08, -0.05), (865, 0.08, -0.05), (870, 0.08, -0.05), (875, 0.08, -0.05), (880, 0.08, -0.05), (885, 0.08, -0.05), (890, 0.08, -0.05), (895, 0.08, -0.05), (900, 0.08, -0.05), (905, 0.08, -0.05), (910, 0.08, -0.05), (915, 0.08, -0.05), (920, 0.08, -0.05), (925, 0.08, -0.05), (930, 0.08, -0.05), (935, 0.08, -0.05), (940, 0.08, -0.05), (945, 0.08, -0.05), (950, 0.08, -0.05), (955, 0.08, -0.05), (960, 0.08, -0.05), (965, 0.08, -0.05), (970, 0.08, -0.05), (975, 0.08, -0.05), (980, 0.08, -0.05), (985, 0.08, -0.05), (990, 0.08, -0.05), (995, 0.08, -0.05), (1000, 0.08, -0.05), (1005, 0.0825, -0.0375), (1010, 0.085, -0.025), (1015, 0.0875, -0.0125), (1020, 0.09, 0), (1025, 0.0925, 0.0125), (1030, 0.095, 0.025), (1035, 0.0975, 0.0375), (1040, 0.1, 0.05), (1045, 0.1, 0.05), (1050, 0.1, 0.05), (1055, 0.1, 0.05), (1060, 0.1, 0.05), (1065, 0.1, 0.05), (1070, 0.1, 0.05), (1075, 0.1, 0.05), (1080, 0.1, 0.05), (1085, 0.1, 0.05), (1090, 0.1, 0.05), (1095, 0.1, 0.05), (1100, 0.1, 0.05), (1105, 0.1, 0.05), (1110, 0.1, 0.05), (1115, 0.1, 0.05), (1120, 0.1, 0.05), (1125, 0.1, 0.05), (1130, 0.1, 0.05), (1135, 0.1, 0.05), (1140, 0.1, 0.05), (1145, 0.1, 0.05), (1150, 0.1, 0.05), (1155, 0.1, 0.05), (1160, 0.1, 0.05), (1165, 0.1, 0.05), (1170, 0.1, 0.05), (1175, 0.1, 0.05), (1180, 0.1, 0.05), (1185, 0.1, 0.05), (1190, 0.1, 0.05), (1195, 0.1, 0.05), (1200, 0.1, 0.05), (1205, 0.1025, 0.0375), (1210, 0.105, 0.025), (1215, 0.1075, 0.0125), (1220, 0.11, 0), (1225, 0.1125, -0.0125), (1230, 0.115, -0.025), (1235, 0.1175, -0.0375), (1240, 0.12, -0.05), (1245, 0.12, -0.05), (1250, 0.12, -0.05), (1255, 0.12, -0.05), (1260, 0.12, -0.05), (1265, 0.12, -0.05), (1270, 0.12, -0.05), (1275, 0.12, -0.05), (1280, 0.12, -0.05), (1285, 0.12, -0.05), (1290, 0.12, -0.05), (1295, 0.12, -0.05), (1300, 0.12, -0.05), (1305, 0.12, -0.05), (1310, 0.12, -0.05), (1315, 0.12, -0.05), (1320, 0.12, -0.05), (1325, 0.12, -0.05), (1330, 0.12, -0.05), (1335, 0.12, -0.05), (1340, 0.12, -0.05), (1345, 0.12, -0.05), (1350, 0.12, -0.05), (1355, 0.12, -0.05), (1360, 0.12, -0.05), (1365, 0.12, -0.05), (1370, 0.12, -0.05), (1375, 0.12, -0.05), (1380, 0.12, -0.05), (1385, 0.12, -0.05), (1390, 0.12, -0.05), (1395, 0.12, -0.05), (1400, 0.12, -0.05), (1405, 0.1225, -0.0375), (1410, 0.125, -0.025), (1415, 0.1275, -0.0125), (1420, 0.13, 0), (1425, 0.1325, 0.0125), (1430, 0.135, 0.025), (1435, 0.1375, 0.0375), (1440, 0.14, 0.05), (1445, 0.14, 0.05), (1450, 0.14, 0.05), (1455, 0.14, 0.05), (1460, 0.14, 0.05), (1465, 0.14, 0.05), (1470, 0.14, 0.05), (1475, 0.14, 0.05), (1480, 0.14, 0.05), (1485, 0.14, 0.05), (1490, 0.14, 0.05), (1495, 0.14, 0.05)
  ]

  # Unpack zmp_data
  t, x, y = zip(*zmp_data)

  # Create plots
  plt.figure(figsize=(15, 10))

  # y vs x
  plt.subplot(3, 1, 1)
  plt.plot(x, y, label='y vs. x')
  plt.xlabel('x')
  plt.ylabel('y')
  plt.title('Plot of y vs. x')
  plt.grid(True)

  # x vs t
  plt.subplot(3, 1, 2)
  plt.plot(t, x, label='x vs. t', color='orange')
  plt.xlabel('t')
  plt.ylabel('x')
  plt.title('Plot of x vs. t')
  plt.grid(True)

  # y vs t
  plt.subplot(3, 1, 3)
  plt.plot(t, y, label='y vs. t', color='green')
  plt.xlabel('t')
  plt.ylabel('y')
  plt.title('Plot of y vs. t')
  plt.grid(True)

  plt.tight_layout()
  plt.show()

# f1()
f2()